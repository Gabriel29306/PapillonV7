name: Weekly Expo Build for Android

on:
  schedule:
    - cron: "0 12 * * 1" # Tous les lundis à 12h UTC
  workflow_dispatch: # Permet d'exécuter manuellement le workflow

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
    # 1. Récupérer le code depuis le repo cible
    - name: Checkout Action Repository
      uses: actions/checkout@v3
      
    - name: Checkout Target Repository
      run: |
        git clone https://github.com/PapillonApp/Papillon.git target-repo
        cd target-repo
        git checkout main

    # 2. Configurer gradle.properties pour générer des APKs par architecture
    - name: Configure Gradle for Split APKs
      run: |
        echo "enableSeparateBuildPerCPUArchitecture=true" >> target-repo/android/gradle.properties

    - name: Get Latest Release
      id: get_latest_release
      uses: actions/github-script@v6
      with:
        script: |
          try {
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            core.setOutput("version", latestRelease.data.tag_name.replace("v", ""));
          } catch (error) {
            console.log("No release found, using default version.");
            core.setOutput("version", "7.7.0");
          }
      
    - name: Increment Version Based on Release
      run: |
        LATEST_VERSION=${{ steps.get_latest_release.outputs.version }}
        NEW_VERSION=$(echo "$LATEST_VERSION" | awk -F'.' '{print $1"."$2"."$3+1}')
        sed -i "s/versionCode .*/versionCode ${NEW_VERSION}/" target-repo/android/app/build.gradle

    # 4. Installer les dépendances et builder
    - name: Install Dependencies
      run: |
        cd target-repo
        npm install

    - name: Build APKs
      run: |
        cd target-repo
        npm run build:android # Assure-toi que cette commande existe dans ton projet

    # 5. Publier les APKs dans une préversion
    - name: Create Pre-Release with APKs
      uses: ncipollo/release-action@v1
      with:
        tag: "v$(date +'%Y%m%d')"
        name: "Weekly Build $(date +'%Y-%m-%d')"
        body: "Build automatique hebdomadaire pour Android."
        prerelease: true
        files: |
          target-repo/android/app/build/outputs/apk/release/*-arm64-v8a-release.apk
          target-repo/android/app/build/outputs/apk/release/*-armeabi-v7a-release.apk
          target-repo/android/app/build/outputs/apk/release/*-x86-release.apk
          target-repo/android/app/build/outputs/apk/release/*-x86_64-release.apk
